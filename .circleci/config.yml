# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

defaults: &defaults
  working_directory: ~/spoke-react-components
  docker:
    - image: circleci/node:latest-browsers

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package.json checksum
            # when this file is changed, this key will fail
            - spoke-react-components-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}
            - spoke-react-components-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - spoke-react-components-{{ .Branch }}
            # Find the most recent cache used from any branch
            - spoke-react-components-master
            - spoke-react-components-

      - run:
          name: Install
          command: npm ci

      - save_cache:
          key: spoke-react-components-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/spoke-react-components
      - run:
          name: Lint
          command: npm run lint

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/spoke-react-components
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .

  # release:
  #   <<: *defaults
  #   steps:
  #     - attach_workspace:
  #         at: ~/spoke-react-components
  #     - run:
  #         name: Release
  #         command: npm run release

  deploy-storybook:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/spoke-react-components
      - run:
          name: "Make sure we can commit to github"
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Deploy Storybook to GH Pages
          command: yarn deploy-storybook

workflows:
  version: 2
  build_and_test:
    jobs:
      - install

      - lint:
          requires:
            - install

      - build:
          requires:
            - install

      # - release:
      #     requires:
      #       - build
      #       - lint
      #     filters:
      #       branches:
      #         only:
      #           - master

      - deploy-storybook:
          requires:
            - build
            - lint
          # requires:
          #   - release
          filters:
            branches:
              only:
                - master
